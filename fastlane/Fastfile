desc 'Release new pod version'

lane :release_pod do |options|
  target_repo    = options[:repo]
  target_project = options[:project]
  #target_version = options[:version]
  spec_path = "#{target_project}.podspec"

  UI.message("👉 Start release lib #{target_project}")

  git_pull
  
  #ensure master branch
  ensure_git_branch
  
  #防止没有提交导致 commit 出错
  increment_build_number_in_plist
  target_version = get_version_number_from_plist(target: target_project)
  target_build = get_build_number_from_plist(target: target_project)
  version_bump_podspec(path: spec_path, version_number: target_version)
  UI.message("👉 new version #{target_version}, build #{target_build}")
  
  git_add(path: '.')
  git_commit(path: '.', message: 'release')
  push_to_git_remote
  if git_tag_exists(tag: target_version)
      UI.message("Tag #{target_version} already exists, then, delete it! 💥")
      remove_git_tag(tag: target_version)
  end
  add_git_tag(tag: target_version)
  push_git_tags
  pod_lib_lint(allow_warnings: true, use_bundle_exec: false)
  if target_repo
    pod_push(path: spec_path, repo: target_repo, allow_warnings: true)
    UI.message("Release lib #{target_project} new version #{target_version}, build #{target_build} to repo #{target_repo} Successfully! 🎉 ")
  else
    pod_push(path: spec_path, allow_warnings: true)
    UI.message("Release lib #{target_project} new version #{target_version}, build #{target_build} to CocoaPods/Specs Successfully! 🎉 ")
  end
end

lane :beta_pod do |options|
  target_repo    = options[:repo]
  target_project = options[:project]
  target_version = options[:version]
  spec_path = "#{target_project}.podspec"

  UI.message("👉 Start release beta lib #{target_project}")

  git_pull
  
  #ensure develop branch
  ensure_git_branch(branch: 'develop')
  
  #防止没有提交导致 commit 出错
  increment_build_number_in_plist
  target_version = get_version_number_from_plist(target: target_project)
  target_build = get_build_number_from_plist(target: target_project)
  version_bump_podspec(path: spec_path, version_number: target_version)
  UI.message("👉 new version #{target_version}, build #{target_build}")
  
  git_add(path: '.')
  git_commit(path: '.', message: 'release')
  push_to_git_remote
  if git_tag_exists(tag: target_version)
      UI.message("Tag #{target_version} already exists, then, delete it! 💥")
      remove_git_tag(tag: target_version)
  end
  add_git_tag(tag: target_version)
  push_git_tags
  pod_lib_lint(allow_warnings: true, use_bundle_exec: false)
  if target_repo
    pod_push(path: spec_path, repo: target_repo, allow_warnings: true)
    UI.message("Release beta lib #{target_project} new version #{target_version}, build #{target_build} to repo #{target_repo} Successfully! 🎉 ")
  else
    pod_push(path: spec_path, allow_warnings: true)
    UI.message("Release beta lib #{target_project} new version #{target_version}, build #{target_build} to CocoaPods/Specs Successfully! 🎉 ")
  end
end
